"use strict";(self.webpackChunkaws_amplify_gen2=self.webpackChunkaws_amplify_gen2||[]).push([[7461],{"./stories/batch-job-progress-bar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Closed:()=>Closed,Completed:()=>Completed,Failed:()=>Failed,Open:()=>Open,Running:()=>Running,WithCustomWidth:()=>WithCustomWidth,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./components/ui/batch-job-progress-bar.tsx"));const __WEBPACK_DEFAULT_EXPORT__={title:"Components/BatchJobProgressBar",component:_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__.G,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{status:{description:"Current status of the batch job",options:["OPEN","PENDING","RUNNING","COMPLETED","FAILED"],control:{type:"radio"}}}},AllStates={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-8 w-[600px]",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"OPEN - Job is created and accepting items"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__.G,{status:"OPEN"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"CLOSED - Job is closed and ready for processing"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__.G,{status:"CLOSED"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"PROCESING - Job is being processed"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__.G,{status:"PROCESSING"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"COMPLETED - Job finished successfully"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__.G,{status:"COMPLETED"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"FAILED - Job encountered an error"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_batch_job_progress_bar__WEBPACK_IMPORTED_MODULE_2__.G,{status:"ERROR"})]})]})},Open={args:{status:"OPEN"},parameters:{docs:{description:{story:"Initial state when the batch job is created and can accept items."}}}},Closed={args:{status:"CLOSED"},parameters:{docs:{description:{story:"Job is closed and waiting to be processed."}}}},Running={args:{status:"RUNNING"},parameters:{docs:{description:{story:"Job is actively processing items."}}}},Completed={args:{status:"COMPLETED"},parameters:{docs:{description:{story:"Job has finished processing all items successfully."}}}},Failed={args:{status:"FAILED"},parameters:{docs:{description:{story:"Job encountered an error during processing."}}}},WithCustomWidth={args:{status:"RUNNING",className:"w-[300px]"},parameters:{docs:{description:{story:"The progress bar can be customized with additional classes for width or other styles."}}}},__namedExportsOrder=["AllStates","Open","Closed","Running","Completed","Failed","WithCustomWidth"];AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-8 w-[600px]">\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">OPEN - Job is created and accepting items</div>\n        <BatchJobProgressBar status="OPEN" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">CLOSED - Job is closed and ready for processing</div>\n        <BatchJobProgressBar status="CLOSED" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">PROCESING - Job is being processed</div>\n        <BatchJobProgressBar status="PROCESSING" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">COMPLETED - Job finished successfully</div>\n        <BatchJobProgressBar status="COMPLETED" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">FAILED - Job encountered an error</div>\n        <BatchJobProgressBar status="ERROR" />\n      </div>\n    </div>\n}',...AllStates.parameters?.docs?.source}}},Open.parameters={...Open.parameters,docs:{...Open.parameters?.docs,source:{originalSource:"{\n  args: {\n    status: 'OPEN'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Initial state when the batch job is created and can accept items.'\n      }\n    }\n  }\n}",...Open.parameters?.docs?.source}}},Closed.parameters={...Closed.parameters,docs:{...Closed.parameters?.docs,source:{originalSource:"{\n  args: {\n    status: 'CLOSED'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job is closed and waiting to be processed.'\n      }\n    }\n  }\n}",...Closed.parameters?.docs?.source}}},Running.parameters={...Running.parameters,docs:{...Running.parameters?.docs,source:{originalSource:"{\n  args: {\n    status: 'RUNNING'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job is actively processing items.'\n      }\n    }\n  }\n}",...Running.parameters?.docs?.source}}},Completed.parameters={...Completed.parameters,docs:{...Completed.parameters?.docs,source:{originalSource:"{\n  args: {\n    status: 'COMPLETED'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job has finished processing all items successfully.'\n      }\n    }\n  }\n}",...Completed.parameters?.docs?.source}}},Failed.parameters={...Failed.parameters,docs:{...Failed.parameters?.docs,source:{originalSource:"{\n  args: {\n    status: 'FAILED'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job encountered an error during processing.'\n      }\n    }\n  }\n}",...Failed.parameters?.docs?.source}}},WithCustomWidth.parameters={...WithCustomWidth.parameters,docs:{...WithCustomWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    status: 'RUNNING',\n    className: 'w-[300px]'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'The progress bar can be customized with additional classes for width or other styles.'\n      }\n    }\n  }\n}",...WithCustomWidth.parameters?.docs?.source}}}},"./components/ui/batch-job-progress-bar.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>BatchJobProgressBar});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./components/ui/segmented-progress-bar.tsx"));const statusToProgressState=status=>{switch(status.toLowerCase()){case"open":default:return"open";case"closed":return"closed";case"processing":case"processed":case"created":return"processing";case"completed":return"complete";case"error":return"error"}};function BatchJobProgressBar({status,className}){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,{state:statusToProgressState(status),className})}BatchJobProgressBar.__docgenInfo={description:"",methods:[],displayName:"BatchJobProgressBar",props:{status:{required:!0,tsType:{name:"union",raw:"'PENDING' | 'RUNNING' | 'COMPLETED' | 'FAILED' | 'OPEN' | 'CLOSED'",elements:[{name:"literal",value:"'PENDING'"},{name:"literal",value:"'RUNNING'"},{name:"literal",value:"'COMPLETED'"},{name:"literal",value:"'FAILED'"},{name:"literal",value:"'OPEN'"},{name:"literal",value:"'CLOSED'"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""}}}},"./components/ui/segmented-progress-bar.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>SegmentedProgressBar});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_lib_utils__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./lib/utils.ts"));const states=["open","closed","processing","complete"],stateToIndex={open:0,closed:1,processing:2,complete:3,error:3},stateColors={open:"bg-primary",closed:"bg-primary",processing:"bg-secondary",complete:"bg-true",error:"bg-false"},defaultLabels=["Open","Closed","Processing","Complete"],stateLabels={open:defaultLabels,closed:defaultLabels,processing:defaultLabels,complete:defaultLabels,error:["Open","Closed","Processing","Error"]};function SegmentedProgressBar({state="open",className=""}){const normalizedState=state.toLowerCase(),validState=Object.keys(stateLabels).includes(normalizedState)?normalizedState:"open",labels=stateLabels[validState],activeIndex="error"===validState?3:stateToIndex[validState];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:(0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)("w-full h-8 bg-neutral rounded-md overflow-hidden border border-border",className),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full w-full flex gap-1",children:labels.map(((label,index)=>{const segmentState=states[index].toLowerCase(),isActive=index<=activeIndex,isError="error"===validState&&index===labels.length-1;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:(0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)("flex-1 flex items-center justify-center transition-colors duration-200",isActive?stateColors[isError?"error":segmentState]:"bg-neutral"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:(0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)("text-sm font-medium truncate px-1 text-primary-foreground"),children:label})},index)}))})})}SegmentedProgressBar.__docgenInfo={description:"",methods:[],displayName:"SegmentedProgressBar",props:{state:{required:!1,tsType:{name:"union",raw:"'open' | 'closed' | 'processing' | 'complete' | 'error'",elements:[{name:"literal",value:"'open'"},{name:"literal",value:"'closed'"},{name:"literal",value:"'processing'"},{name:"literal",value:"'complete'"},{name:"literal",value:"'error'"}]},description:"",defaultValue:{value:"'open'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}}}}},"./lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);