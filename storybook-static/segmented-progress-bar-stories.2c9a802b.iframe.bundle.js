"use strict";(self.webpackChunkaws_amplify_gen2=self.webpackChunkaws_amplify_gen2||[]).push([[2039],{"./stories/segmented-progress-bar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Closed:()=>Closed,Complete:()=>Complete,Error:()=>Error,Open:()=>Open,Processing:()=>Processing,WithCustomWidth:()=>WithCustomWidth,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./components/ui/segmented-progress-bar.tsx"));const __WEBPACK_DEFAULT_EXPORT__={title:"Components/SegmentedProgressBar",component:_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{state:{description:"Current state of the progress bar",options:["open","closed","processing","complete","error"],control:{type:"radio"}}}},AllStates={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-8 w-[600px]",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"Open - Initial state"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,{state:"open"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"Closed - Ready for processing"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,{state:"closed"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"Processing - Currently running"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,{state:"processing"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"Complete - Successfully finished"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,{state:"complete"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"Error - Failed during processing"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_segmented_progress_bar__WEBPACK_IMPORTED_MODULE_2__.x,{state:"error"})]})]})},Open={args:{state:"open"},parameters:{docs:{description:{story:"Initial state when the job is first created. Only the first segment is active."}}}},Closed={args:{state:"closed"},parameters:{docs:{description:{story:"Job is closed and ready for processing. First two segments are active."}}}},Processing={args:{state:"processing"},parameters:{docs:{description:{story:"Job is currently being processed. First three segments are active."}}}},Complete={args:{state:"complete"},parameters:{docs:{description:{story:"Job has completed successfully. All segments are active."}}}},Error={args:{state:"error"},parameters:{docs:{description:{story:"Job failed during processing. Shows error state in the final segment."}}}},WithCustomWidth={args:{state:"processing",className:"w-[300px]"},parameters:{docs:{description:{story:"The progress bar can be customized with additional classes for width or other styles."}}}},__namedExportsOrder=["AllStates","Open","Closed","Processing","Complete","Error","WithCustomWidth"];AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-8 w-[600px]">\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">Open - Initial state</div>\n        <SegmentedProgressBar state="open" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">Closed - Ready for processing</div>\n        <SegmentedProgressBar state="closed" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">Processing - Currently running</div>\n        <SegmentedProgressBar state="processing" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">Complete - Successfully finished</div>\n        <SegmentedProgressBar state="complete" />\n      </div>\n      <div>\n        <div className="text-sm text-muted-foreground mb-2">Error - Failed during processing</div>\n        <SegmentedProgressBar state="error" />\n      </div>\n    </div>\n}',...AllStates.parameters?.docs?.source}}},Open.parameters={...Open.parameters,docs:{...Open.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: 'open'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Initial state when the job is first created. Only the first segment is active.'\n      }\n    }\n  }\n}",...Open.parameters?.docs?.source}}},Closed.parameters={...Closed.parameters,docs:{...Closed.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: 'closed'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job is closed and ready for processing. First two segments are active.'\n      }\n    }\n  }\n}",...Closed.parameters?.docs?.source}}},Processing.parameters={...Processing.parameters,docs:{...Processing.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: 'processing'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job is currently being processed. First three segments are active.'\n      }\n    }\n  }\n}",...Processing.parameters?.docs?.source}}},Complete.parameters={...Complete.parameters,docs:{...Complete.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: 'complete'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job has completed successfully. All segments are active.'\n      }\n    }\n  }\n}",...Complete.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: 'error'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Job failed during processing. Shows error state in the final segment.'\n      }\n    }\n  }\n}",...Error.parameters?.docs?.source}}},WithCustomWidth.parameters={...WithCustomWidth.parameters,docs:{...WithCustomWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: 'processing',\n    className: 'w-[300px]'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'The progress bar can be customized with additional classes for width or other styles.'\n      }\n    }\n  }\n}",...WithCustomWidth.parameters?.docs?.source}}}},"./components/ui/segmented-progress-bar.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>SegmentedProgressBar});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_lib_utils__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./lib/utils.ts"));const states=["open","closed","processing","complete"],stateToIndex={open:0,closed:1,processing:2,complete:3,error:3},stateColors={open:"bg-primary",closed:"bg-primary",processing:"bg-secondary",complete:"bg-true",error:"bg-false"},defaultLabels=["Open","Closed","Processing","Complete"],stateLabels={open:defaultLabels,closed:defaultLabels,processing:defaultLabels,complete:defaultLabels,error:["Open","Closed","Processing","Error"]};function SegmentedProgressBar({state="open",className=""}){const normalizedState=state.toLowerCase(),validState=Object.keys(stateLabels).includes(normalizedState)?normalizedState:"open",labels=stateLabels[validState],activeIndex="error"===validState?3:stateToIndex[validState];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:(0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)("w-full h-8 bg-neutral rounded-md overflow-hidden border border-border",className),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full w-full flex gap-1",children:labels.map(((label,index)=>{const segmentState=states[index].toLowerCase(),isActive=index<=activeIndex,isError="error"===validState&&index===labels.length-1;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:(0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)("flex-1 flex items-center justify-center transition-colors duration-200",isActive?stateColors[isError?"error":segmentState]:"bg-neutral"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:(0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)("text-sm font-medium truncate px-1 text-primary-foreground"),children:label})},index)}))})})}SegmentedProgressBar.__docgenInfo={description:"",methods:[],displayName:"SegmentedProgressBar",props:{state:{required:!1,tsType:{name:"union",raw:"'open' | 'closed' | 'processing' | 'complete' | 'error'",elements:[{name:"literal",value:"'open'"},{name:"literal",value:"'closed'"},{name:"literal",value:"'processing'"},{name:"literal",value:"'complete'"},{name:"literal",value:"'error'"}]},description:"",defaultValue:{value:"'open'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}}}}},"./lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);