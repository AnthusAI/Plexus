version: 1
applications:
  - appRoot: dashboard
    backend:
      phases:
        build:
          commands:
            - npm ci --cache .npm --prefer-offline
            - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
    frontend:
      phases:
        preBuild:
          commands:
            - npm ci --cache .npm --prefer-offline
        build:
          commands:
            - npm run build
      artifacts:
        baseDirectory: .next
        files:
          - '**/*'
      cache:
        paths:
          - .next/cache/**/*
          - .npm/**/*
          - node_modules/**/*
    test:
      phases:
        preTest:
          commands:
            - npm install wait-on pm2 mocha mochawesome mochawesome-merge \
              mochawesome-report-generator --save-dev
            - npx pm2 start npm -- start
            - npx wait-on http://localhost:3000
        test:
          commands:
            - 'npx cypress run --reporter mochawesome --reporter-options \
               "reportDir=cypress/report/mochawesome-report,overwrite=false,\
               html=false,json=true,timestamp=mmddyyyy_HHMMss"'
        postTest:
          commands:
            - npx mochawesome-merge cypress/report/mochawesome-report/mochawesome*.json \
              -o cypress/testConfig.json
            - npx marge cypress/testConfig.json -o cypress
            - npx pm2 kill
      artifacts:
        baseDirectory: cypress
        configFilePath: testConfig.json
        files:
          - '**/*.mp4'
          - 'testConfig.html'
          - 'assets/**'