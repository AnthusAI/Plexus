---
description: Overall Project Structure
globs: 
---
# Plexus Overall Project Structure

Plexus is a documentation and evaluation platform for AI/ML systems, with an Amplify Gen2 Next.js/React dashboard app, and with Python backend code for the AI/ML stuff.  We use Celery with AWS SQS and Dynamo DB for remote task dispatch from the dashboard to worker nodes running Python that send results back through the GraphQL API.

## Tech Stack
### Python AI/ML
- Python
- LangChain/LangGraph
- Miniconda environment `py39`
### Dashboard app
- Next.js 14.1
- AWS Amplify Gen2
- TypeScript
- React / Shadcn UI

## Key Directories
- `plexus`: Python modules for AI/ML, CLI, etc
- `/dashboard/app`: Next.js routes & pages
- `/dashboard/components`: React components
- `/dashboard/amplify`: AWS config & resources

## Core Files
- `dashboard/app/client-layout.tsx`: Controls auth & public routes via `publicPaths` array
- `dashboard/amplify/data/resource.ts`: Core data model definitions
- `dashboard/utils/amplify-client.ts`: API client implementation

## Authentication
1. Auth handled by AWS Amplify / Cognito
2. Routes checked against `publicPaths` in `client-layout.tsx`
3. Protected routes redirect to landing
4. Data operations flow through `amplify-client.ts`