name: Release

on:
  push:
    branches:
      - main
      - staging
      - develop

jobs:
  release:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release invoke
          pip install -e .
          
      - name: Run Python Tests
        run: invoke ci
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Install Node dependencies
        working-directory: ./dashboard
        run: npm ci
          
      - name: Run TypeScript Type Check
        working-directory: ./dashboard
        run: npm run ci:typecheck
        
      - name: Run Unit Tests
        working-directory: ./dashboard
        run: npm run ci:unit
        
      - name: Build Storybook
        working-directory: ./dashboard
        run: npm run build-storybook --quiet
        
      - name: Install Playwright Browsers
        working-directory: ./dashboard
        run: npx playwright install --with-deps chromium
        
      - name: Run Storybook Tests
        working-directory: ./dashboard
        run: |
          echo "Starting Storybook test process..."
          echo "Checking storybook-static directory..."
          ls -la storybook-static
          echo "Starting concurrent processes..."
          npx concurrently \
            --verbose \
            -P \
            -t \
            -k \
            -s first \
            -n "SB,TEST" \
            -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --address 127.0.0.1" \
            "npx wait-on --verbose --interval 1000 --timeout 30000 http-get://127.0.0.1:6006 && echo 'Server ready' && npm run test-storybook -- --url http://127.0.0.1:6006 --verbose"

      - name: Initialize Version Tag (if needed)
        run: |
          git config --global user.email "semantic-release@github.actions"
          git config --global user.name "Semantic Release Bot"
          if ! git tag | grep -q "v0.0.0"; then
            git tag -a v0.0.0 -m "Initial version"
            git push origin v0.0.0
          fi

      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release version
          semantic-release publish